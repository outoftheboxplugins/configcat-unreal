name: Plugin CD

on:
  push:
    tags:
      - 'v*'

jobs:
  build-win64:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install via vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg build/vcpkg
          ./build/vcpkg/bootstrap-vcpkg.bat
          ./build/vcpkg/vcpkg install configcat --triplet x64-windows

      - uses: actions/upload-artifact@v3
        with:
          name: Win64
          path: |
            ./build/vcpkg/installed/*/lib/configcat.lib
            ./build/vcpkg/installed/*/lib/cpr.lib
            ./build/vcpkg/installed/*/lib/hash-library.lib

  build-android:
    runs-on: windows-latest
    if: false

    steps:
      - uses: actions/checkout@v2

      - name: Install via vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg build/vcpkg
          ./build/vcpkg/bootstrap-vcpkg.bat
          ./build/vcpkg/vcpkg install configcat --triplet arm64-android

      - uses: actions/upload-artifact@v3
        with:
          name: Android
          path: |
            ./build/vcpkg/installed/*/lib/libconfigcat.a
            ./build/vcpkg/installed/*/lib/libcpr.a
            ./build/vcpkg/installed/*/lib/libhash-library.a

  build-macos:
    runs-on: macos-latest
    if: false

    steps:
      - uses: actions/checkout@v2

      - name: Install via vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg build/vcpkg
          ./build/vcpkg/bootstrap-vcpkg.sh
          ./build/vcpkg/vcpkg install configcat --triplet x64-osx

      - uses: actions/upload-artifact@v3
        with:
          name: MacOs
          path: |
            ./build/vcpkg/installed/*/lib/libconfigcat.a
            ./build/vcpkg/installed/*/lib/libcpr.a
            ./build/vcpkg/installed/*/lib/libhash-library.a

  build-ios:
    runs-on: macos-latest
    if: true

    steps:
      - uses: actions/checkout@v2

      - name: Install via vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg build/vcpkg
          ./build/vcpkg/bootstrap-vcpkg.sh
          ./build/vcpkg/vcpkg install configcat --triplet arm64-ios

      - name: Install via vcpkg
        if: always()
        run: |
          cat /Users/runner/work/configcat-unreal/configcat-unreal/build/vcpkg/buildtrees/curl/config-arm64-ios-out.log

          cat /Users/runner/work/configcat-unreal/configcat-unreal/build/vcpkg/installed/vcpkg/issue_body.md

          cat /Users/runner/work/configcat-unreal/configcat-unreal/build/vcpkg/buildtrees/curl/arm64-ios-rel/TryRunResults.cmake

      - uses: actions/upload-artifact@v3
        with:
          name: iOS
          path: |
            ./build/vcpkg/installed/*/lib/libconfigcat.a
            ./build/vcpkg/installed/*/lib/libcpr.a
            ./build/vcpkg/installed/*/lib/libhash-library.a

  build-linux:
    runs-on: ubuntu-latest
    if: false

    steps:
      - uses: actions/checkout@v2

      - name: Prepare files
        run: |
          git clone https://github.com/microsoft/vcpkg build/vcpkg
          ./build/vcpkg/bootstrap-vcpkg.sh

          ./build/vcpkg/vcpkg install configcat --only-downloads --triplet x64-linux-unreal --overlay-triplets "$GITHUB_WORKSPACE/Extras/triplets"

      - name: Append patches
        shell: pwsh
        run: |
          &"$env:GITHUB_WORKSPACE/Extras/scripts/add-patch-to-port" -portFolder "./build/vcpkg/ports/configcat" -patchFile "$env:GITHUB_WORKSPACE/Extras/patches/configcat/unreal-linux-wait_for.patch"
          &"$env:GITHUB_WORKSPACE/Extras/scripts/add-patch-to-port" -portFolder "./build/vcpkg/ports/cpr" -patchFile "$env:GITHUB_WORKSPACE/Extras/patches/cpr/unreal-linux-wait_for.patch"

      - name: Install via vcpkg
        run: |
          # Extra steps for Unreal Engine integration
          export CC=clang
          export CXX=clang++

          ./build/vcpkg/vcpkg install configcat --triplet x64-linux-unreal --overlay-triplets "$GITHUB_WORKSPACE/Extras/triplets"

      - uses: actions/upload-artifact@v3
        with:
          name: Linux
          path: |
            ./build/vcpkg/installed/*/lib/libconfigcat.a
            ./build/vcpkg/installed/*/lib/libcpr.a
            ./build/vcpkg/installed/*/lib/libhash-library.a

  publish-engine-plugin:
    runs-on: ubuntu-latest
    # needs: [build-win64, build-android, build-macos, build-ios, build-linux]
    needs: [build-win64, build-ios]
    name: ðŸ“¦ Package Plugin
    steps:
      - uses: actions/checkout@v3

      - uses: jossef/action-set-json-field@v2.1
        with:
          file: ConfigCat.uplugin
          field: VersionName
          value: "${{ github.ref_name }}"

      - uses: actions/download-artifact@v3
        with:
          name: Win64
          path: Source/ThirdParty/ConfigCatCppSDK/Binaries/Win64

      - name: Archive files
        run: |
          zip -r ConfigCat.zip . -x LICENSE

      - uses: ncipollo/release-action@v1
        with:
          artifacts: ConfigCat.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          tag: ${{ github.ref }}
          name: "${{ github.ref_name }}"
